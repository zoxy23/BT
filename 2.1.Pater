//******************************************************************************************************************************************************************************************************************
//Pattern
//Tam Giác Cân
//#                    # # # # # # # #      # # # # # # # #                    #
//# #                  # # # # # # #          # # # # # # #                  # #
//# # #                # # # # # #              # # # # # #                # # #
//# # # #              # # # # #                  # # # # #              # # # #
//# # # # #            # # # #                      # # # #            # # # # #
//# # # # # #          # # #                          # # #          # # # # # #
//# # # # # # #        # #                              # #        # # # # # # #
//# # # # # # # #      #                                  #      # # # # # # # #
//     (a)                   (b)                  (c)                  (d)
//******************************************************************************************************************************************************************************************************************
//main(){//(a)
//	int i,j,size=8;
//	for(i=0;i<=size;i++){
//		for(j=0;j<=size;j++){
//			if(j<i)	printf(" #");
//		}printf("\n");
//	}
//}
//******************************************************************************************************************************************************************************************************************
//main(){//(b)
//	int i,j,size=8;
//	for(i=0;i<=size;i++){
//		for(j=0;j<=size;j++){
//			if(j>i)	printf(" #");
//		}printf("\n");
//	}
//}
//******************************************************************************************************************************************************************************************************************
//main(){//(c)
//	int i,j,size=8;
//	for(i=0;i<size;i++){
//		for(j=0;j<i;j++)	printf("  ");
//		for(j=i;j<size;j++)	printf(" #");printf("\n");
//	}
//}
//******************************************************************************************************************************************************************************************************************
//main(){//(d)
//	int i,j,size=8;
//	for(i=0;i<size;i++){
//		for(j=0;j<size-i-1;j++)	printf("  ");
//		for(j=0;j<=i;j++)		printf(" #");printf("\n");
//	}
//}
//******************************************************************************************************************************************************************************************************************
//Hints: On the diagonal, row = col.  On the opposite diagonal, row + col = size + 1.
//Vuông rỗng,z ngược(xuôi),đồng hồ cát,vuông rỗng
//# # # # # # #    # # # # # # #    # # # # # # #    # # # # # # #    # # # # # # #
//#           #      #                        #        #       #      # #       # #
//#           #        #                    #            #   #        #   #   #   #
//#           #          #                #                #          #     #     #
//#           #            #            #                #   #        #   #   #   #
//#           #              #        #                #       #      # #       # #
//# # # # # # #    # # # # # # #    # # # # # # #    # # # # # # #    # # # # # # #
//     (e)               (f)             (g)              (h)              (i)
//******************************************************************************************************
//(e)
//i==0 vẽ hàng ngang đầu i==size-1:vẽ hàng ngang cuối
//j==0 vẽ hàng dọc đầu   j==size-1:vẽ hàng dọc cuối
//void hinh_vuong(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<size;j++){
//			if(i==0||i==size-1||j==0||j==size-1)	printf(" #");
//			else printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=7;
//	hinh_vuong(size);
//}
//******************************************************************************************************
//(f) //i==j:vẽ đường chéo
//int z_nguoc(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<size;j++){
//			if(i==0||i==size-1||i==j)	printf(" #");
//			else	printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=7;
//	z_nguoc(size);
//}
//******************************************************************************************************
//(g) //j==size-1-i:vẽ đường chéo
//int hinh_z(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<size;j++){
//			if(i==0||i==size-1||j==size-1-i)	printf(" #");
//			else 	printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=7;
//	hinh_z(size);
//}
//******************************************************************************************************
//(h) //j==size-1-i:vẽ đường chéo
//int dong_ho_cat(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<size;j++){
//			if(i==0||i==size-1||j==i||j==size-1-i)	printf(" #");
//			else	printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=7;
//	dong_ho_cat(size);
//}
//******************************************************************************************************
//(i) 
//int hinh_vuong_cheo(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<size;j++){
//			if(i==0||i==size-1||j==0||j==size-1||j==i||j==size-1-i)	printf(" #");
//			else printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=7;
//	hinh_vuong_cheo(size);
//}
//******************************************************************************************************
//Tam giác cân(ngược),kim cương
//# # # # # # # # # # #                #                          #
//  # # # # # # # # #                # # #                      # # #
//    # # # # # # #                # # # # #                  # # # # #
//      # # # # #                # # # # # # #              # # # # # # #
//        # # #                # # # # # # # # #          # # # # # # # # #
//          #                # # # # # # # # # # #      # # # # # # # # # # #
//         (j)                        (k)                 # # # # # # # # #
//                                                          # # # # # # #
//                                                            # # # # #
//                                                              # # #
//                                                                #
//                                                               (l)
//******************************************************************************************************
//(j) //2*size-1:tam giác cân có chiều rộng lớn hơn chiều cao.
// size - 1:Cột giữa  || size - 1 - i:cột trái || size - 1 + i:cột phải
//j>=i:vẽ bên trái || j < 2*size-1-i:vẽ bên phải
//int tam_giac_nguoc(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<2*size-1;j++){
//			if(i<=j && j < 2*size-1-i)	printf(" #");
//			else						printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=6;
//	tam_giac_nguoc(size);
//}
////******************************************************************************************************
//(k)
//int tamGiac(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<=2*size-1;j++){
//			if(j>=size-1-i && j <= size-1+i)	printf(" #");
//			else 								printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=6;
//	tamGiac(size);
//}
//******************************************************************************************************
//(l) //size-1-i:in cột giữa //size-1+i:in cột phải	
//int hinhThoi(int size){
//	int i,j;
//	for(i=0;i<size;i++){
//		for(j=0;j<2*size-1;j++){
//			if(j>=size-1-i && j <=size-1+i)	printf(" #");
//			else printf("  ");
//		}printf("\n");
//	}
//	for(i=size-2;i>=0;i--){//size-2 né lặp lại dòng giữa
//		for(j=0;j<2*size-1;j++){
//			if(j>=size-1-i && j<=size-1+i)	printf(" #");
//			else 							printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int size=6;
//	hinhThoi(size);
//}

//void hinhKimCuong(int size) {
//    int i, j;
//    for (i = 0; i <= size; i++) {// Vẽ phần trên của kim cương
//        for (j = 1; j <= size - i; j++) printf("  ");// In khoảng trắng
//        for (j = 1; j <= 2 * i - 1; j++) printf(" #");// In dấu # 
//		printf("\n");  
//    }
//    for (i=size-1;i>=1;i--) {// Vẽ phần dưới của kim cương
//        for(j = 1;j<=size-i;j++) printf("  ");// In khoảng trắng
//        for(j = 1;j<=2*i-1;j++)printf(" #");// In dấu #
//        printf("\n");
//    }
//}
//int main() {
//    int size;
//    printf("Nhap Size Cua Hinh: ");
//    scanf("%d", &size);
//    hinhKimCuong(size);
//}

//******************************************************************************************************
//Tam Giác Số
//1                    1 2 3 4 5 6 7 8                    1      8 7 6 5 4 3 2 1
//1 2                    1 2 3 4 5 6 7                  2 1      7 6 5 4 3 2 1
//1 2 3                    1 2 3 4 5 6                3 2 1      6 5 4 3 2 1
//1 2 3 4                    1 2 3 4 5              4 3 2 1      5 4 3 2 1
//1 2 3 4 5                    1 2 3 4            5 4 3 2 1      4 3 2 1
//1 2 3 4 5 6                    1 2 3          6 5 4 3 2 1      3 2 1
//1 2 3 4 5 6 7                    1 2        7 6 5 4 3 2 1      2 1
//1 2 3 4 5 6 7 8                    1      8 7 6 5 4 3 2 1      1
//     (m)                  (n)                    (o)                (p)
//**************************************************************************************************
//void veTamGiacM(int n){
//	int i,j;
//	for(i=1;i<=n;i++){
//		for(j=1;j<=i;j++)printf("%d ",j);
//		printf("\n");
//	}
//}
//main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	veTamGiacM(n);
//}
//*************************************************************************************************************
//void veTamGiacN(int n){//i=1 in 1-->n-1
//	int i,j;
//	for(i=0;i<n;i++){
//		for(j=0;j<i;j++)	printf("  ");
//		for(j=1;j<=n-i;j++)	printf("%d ",j);
//		printf("\n");
//	}
//}	
//main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	veTamGiacN(n);
//}
//*************************************************************************************************************
//void veTamGiacO(int n){
//	int i,j;
//	for(i=0;i<n;i++){
//		for(j=0;j<n-i-1;j++)	printf("  ");//i=0 -> n-1
//		for(j=i+1;j>0;j--)		printf("%d ",j);//i=0 -> 1 i=1 -> 2 1
//		printf("\n");
//	}
//}	
//main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	veTamGiacO(n);
//}
//*************************************************************************************************************
//void veTamGiacP(int n){
//	int i,j;
//	for(i=0;i<n;i++){
//		for(j=n-i;j>0;j--){//i=0 -> in từ n đến 1;i=1 in từ n-1 đến 1
//			printf("%d ",j);
//		}
//		printf("\n");
//	}
//}	
//main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	veTamGiacP(n);
//}
//*************************************************************************************************************
//Tam giác cân
//              1                    1 2 3 4 5 6 7 8 7 6 5 4 3 2 1
//            1 2 1                    1 2 3 4 5 6 7 6 5 4 3 2 1
//          1 2 3 2 1                    1 2 3 4 5 6 5 4 3 2 1
//        1 2 3 4 3 2 1                    1 2 3 4 5 4 3 2 1
//      1 2 3 4 5 4 3 2 1                    1 2 3 4 3 2 1
//    1 2 3 4 5 6 5 4 3 2 1                    1 2 3 2 1
//  1 2 3 4 5 6 7 6 5 4 3 2 1                    1 2 1
//1 2 3 4 5 6 7 8 7 6 5 4 3 2 1                    1
//            (q)                                (r)
//*************************************************************************************************************
//void veTamGiacQ(int n){
//    int i, j;
//    for(i=0;i<n;i++) {
//		for(j=0;j<n-i-1;j++)printf("  ");
//		for(j=1;j<=i+1;j++)	printf("%d ",j);//Tăng dần 
//		for(j=i;j>0;j--)	printf("%d ",j);//Giảm dần 
//		printf("\n"); 
//    }
//}
//void veTamGiacQ(int n) {
//    int i, j;
//    for(i=1;i<=n;i++) {
//        for(j=0;j<n-i;j++) 	printf("  ");
//        for(j=1;j<=i;j++) 	printf("%d ", j);
//        for(j=i-1;j>=1;j--) printf("%d ", j);
//        printf("\n");  
//    }
//}
//int main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	veTamGiacQ(n);
//}
//*************************************************************************************************************
//void veTamGiacR(int n){
//    int i,j;
//    for(i=0;i<n;i++) {
//		for(j=1;j<=i;j++)	printf("  ");
//		for(j=1;j<=n-i;j++)	printf("%d ",j);//Tăng dần
//		for(j=n-i-1;j>0;j--)printf("%d ",j);//Giảm dần
//		printf("\n"); 
//    }
//}
//int main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	veTamGiacR(n);
//}
//*************************************************************************************************************
//Ghép 2 tam giác
//1                           1      1 2 3 4 5 6 7 8 7 6 5 4 3 2 1
//1 2                       2 1      1 2 3 4 5 6 7   7 6 5 4 3 2 1
//1 2 3                   3 2 1      1 2 3 4 5 6       6 5 4 3 2 1
//1 2 3 4               4 3 2 1      1 2 3 4 5           5 4 3 2 1
//1 2 3 4 5           5 4 3 2 1      1 2 3 4               4 3 2 1
//1 2 3 4 5 6       6 5 4 3 2 1      1 2 3                   3 2 1
//1 2 3 4 5 6 7   7 6 5 4 3 2 1      1 2                       2 1
//1 2 3 4 5 6 7 8 7 6 5 4 3 2 1      1                           1
//             (s)                                (t)
//*************************************************************************************************************
//void veS(int n){
//	int i,j;
//	for(i=1;i<=n;i++){
//		for(j=1;j<=i;j++)			printf("%d ",j);//hình m
//		for(j=2*(n-i)-1;j>0;j--)	printf("  ");//khoảng trắng
//		for(j=(i==n)?i-1:i;j>=1;j--)printf("%d ",j);//số giảm 
//		//if(i==n)	tmp=i-1 else tmp=i;--->tmp=i-1 tránh số 8 lặp lại
//		printf("\n");
//	}
//}
//int main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	veS(n);
//}
//*************************************************************************************************************
//void veT(int n) {
//    int i,j;
//    for(i=n;i>=1;i--) { // Bắt đầu từ n, giảm dần đến 1
//        for(j=1;j<=i;j++) 			printf("%d ", j); // Hình m
//        for(j=2*(n-i)-1;j>0;j--) 	printf("  "); // Khoảng trắng
//        for(j=(i==n)?i-1:i;j>=1;j--)printf("%d ",j);//số giảm
//        //if(i==n)	tmp=i-1 else tmp=i;--->tmp=i-1 tránh số 8 lặp lại
//        printf("\n");
//    }
//}
//int main() {
//    int n;printf("Nhap Size: ");scanf("%d", &n);
//    veT(n);
//}
//*************************************************************************************************************
// So lon hon 10 tang dan
//              1
//            2 3 2
//          3 4 5 4 3
//        4 5 6 7 6 5 4
//      5 6 7 8 9 8 7 6 5
//    6 7 8 9 0 1 0 9 8 7 6
//  7 8 9 0 1 2 3 2 1 0 9 8 7 
//8 9 0 1 2 3 4 5 4 3 2 1 0 9 8
//             (u)
//void veU(int n) {
//    int i,j;
//	for(i=0;i<n;i++){
//		for(j=0;j<n-i-1;j++)	printf("  ");//In khoảng trắng
//		for(j=1;j<=i+1;j++){//Tăng dần 
//			if(i<5&&j<5)	printf("%d ",j+i);//Nếu i > 40->i+j thì % 10
//			else			printf("%d ",(i+j)%10);//(i+j)%10):0-9
//		}
//		for(j=i;j>0;j--){//Giảm dần từ i về 1
//			if(i<5)		printf("%d ",j+i);
//			else		printf("%d ",(i+j)%10);
//			}printf("\n");
//		}
//}
//int main() {
//    int n;printf("Nhap Size: ");scanf("%d", &n);
//    veU(n);
//}
//*************************************************************************************************************
//Triangle
//                            1
//                        1   2   1
//                    1   2   4   2   1
//                1   2   4   8   4   2   1
//            1   2   4   8  16   8   4   2   1
//        1   2   4   8  16  32  16   8   4   2   1
//    1   2   4   8  16  32  64  32  16   8   4   2   1
//1   2   4   8  16  32  64 128  64  32  16   8   4   2   1
//                  (a) PowerOf2Triangle
//*************************************************************************************************************
//void PowerOf2Triangle(int n) {
//    int i,j;
//	for(i=0;i<n;i++){
//		for(j=0;j<(n-i-1)*2;j++)printf("  ");//In khoảng trắng
//		for(j=0;j<=i;j++)		printf("%3d ",(int)pow(2,j));//Tăng dần
//		for(j=i-1;j>=0;j--)		printf("%4d ",(int)pow(2,j));//Giảm dần
//		printf("\n");
//	}
//}
//int main() {
//    int n;printf("Nhap Size: ");scanf("%d", &n);
//    PowerOf2Triangle(n);
//}
//*************************************************************************************************************
 //1                                      1
//1  1                                 1   1
//1  2  1                            1   2   1
//1  3  3  1                       1   3   3   1
//1  4  6  4  1                  1   4   6   4   1
//1  5 10 10  5  1             1   5  10  10   5   1
//1  6 15 20 15  6  1        1   6  15  20  15   6   1
//(b) PascalTriangle1           (c) PascalTriangle2
//*************************************************************************************************************
//void vePascal(int n){
//	int kq=1;
//	for (int i=1; i<=n; i++){
////		for (int j=0; j<n-i; j++){ 
////				printf("  ");
////		}
//		printf("1 ");
//		for (int j=2; j<=i; j++){
//			kq=kq*(i-j+1)/(j-1);
//			printf("%d ",kq);
//		}
//		printf("\n");
//	}
//}
//main(){
//	int n;
//	printf("nhap n ");
//	scanf("%d",&n);
//	vePascal(n);
//}
//*************************************************************************************************************
//void vePascal(int n){
//	int kq=1,i,j;
//	for ( i=1; i<=n; i++){
//		for ( j=n; j>i; j--)printf("  ");printf("1 ");
//		for ( j=2; j<=i; j++){
//			kq=kq*(i-j+1)/(j-1);
//			printf("%3d ",kq);
//		}
//		printf("\n");
//	}
//}
//main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	vePascal(n);
//}
//*************************************************************************************************************
//Tam Giác Rỗng
// #
// # #
// #   #
// #     #
// #       #
// #         #
// #           #
// # # # # # # # #
//int TamGiacRong(int n){
//	int i,j;//j cột i hàng
//	for(i=0;i<n;i++){
//		for(j=0;j<n;j++){
//            // j == 0: Cột đầu tiên (cạnh trái)
//            // j == i: Cột cuối cùng của mỗi hàng (cạnh phải)
//            // i == n - 1: Hàng cuối cùng (đáy tam giác)
//			if(j == 0 || j == i || i == n - 1)	printf(" #");
//			else								printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	TamGiacRong(n);
//}
//*************************************************************************************************************
// # # # # # # # #
// #           #
// #         #
// #       #
// #     #
// #   #
// # #
// #
//int TamGiacRong(int n){
//	int i,j;
//	for(i=0;i<n;i++){
//		for(j=0;j<n;j++){
//			if(j==0||i==0||j==n-i-1)printf(" #");
//			else					printf("  ");
//		}printf("\n");
//	}
//}
//main(){
//	int n;printf("Nhap Size: ");scanf("%d",&n);
//	TamGiacRong(n);
//}
//*************************************************************************************************************
int TamGiacRong(int n){
	int i,j;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(i==0||j==0)printf(" #");
			else					printf("  ");
		}printf("\n");
	}
}
main(){
	int n=8;
	TamGiacRong(n);
}












