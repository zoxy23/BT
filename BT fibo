#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <stdbool.h>

//Bai 1:Hàm kiểm tra số fibonacy
//F(0) = 0, F(1) = 1
//F(n) = F(n-1) + F(n-2)
//0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368
//int fibonacy(int n){
//	int a=0,b=1;
//	while(b<n){
//		int tmp = a+b;
//		a = b;
//		b = tmp;
//	}
//	return(b==n);
//}
//main(){
//	int n,i;printf("Nhap N:");scanf("%d",&n);
//	if(fibonacy(n)){
//		printf("YES");
//	}
//	else{
//		printf("NO");
//	}
//}
//*********************************************************************************************************************************
//B2:Nếu không phải Fibonacy,in ra các ước của nó
//int fibo(int n){
//	int a=0,b=1;
//	while(b<n){
//		int temp = a+b;
//		a = b;
//		b = temp;
//	}
//	return(b==n);
//}
//main(){
//	int n,i;printf("Nhap n:");scanf("%d",&n);
//	if(fibo(n)){
//		printf("N la Fibonacy");
//	}else{
//		printf("N khong la Fibonacy\n");
//		printf("Uoc cua N la:");
//		for(i=1;i<=n;i++){
//			if(n % i == 0){
//				printf("%d ",i);
//			}
//		}printf("\n");
//	}
//}

//*********************************************************************************************************************************
//B3:In ra tổng tất cả các ước của N.
//int fibo(int n){
//	int a=0,b=1;
//	while(b<n){
//		int temp=a+b;a=b;b=temp;
//	}return(b==n);
//}
//main(){
//	int n,i;printf("Nhap n:");scanf("%d",&n);
//	int sum=0;
//	if(fibo(n)){
//		printf("YES");
//	}else{
//		printf("NO\n");
//		printf("Uoc cua N la:");
//		for(i=1;i<=n;i++){
//			if(n % i == 0){
//				printf("%d ",i);
//				sum += i;
//			}
//		}printf("\n");
//		printf("Tong cac uoc cua N la:%d ",sum);
//	}
//}
//*********************************************************************************************************************************
//B4:In ra số lượng các ước số của n.
//int fibo(int n){
//	int a=0,b=1;
//	while(b<n){
//		int temp=a+b;a=b;b=temp;
//	}return(b==n);
//}
//main(){
//	int n,i;printf("Nhap n:");scanf("%d",&n);
//	int sum=0,count=0;
//	if(fibo(n)){
//		printf("YES");
//	}else{
//		printf("NO\n");
//		printf("Uoc cua N la:");
//		printf("So luong uoc cua N la:");
//		for(i=1;i<=n;i++){
//			if(n % i == 0){
//				printf("%d ",i);
//				sum += i;
//				count++;
//			}
//		}printf("\n");
//		printf("Tong cac uoc cua N la:%d \n",sum);
//		printf("So luong uoc cua N la:%d ",count);
//	}
//}
//*********************************************************************************************************************************
//B5:Nhập n,in ra các Fibonacy từ 1 đến n.
//int fibo(int n){
//	int a=0,b=1;
//	while(b<n){
//		int tmp=a+b;a=b;b=tmp;
//	}return(b==n);
//}
//main(){
//	int n,i;printf("Nhap N:");scanf("%d",&n);
//	for(i=2;i<=n;i++){
//		if(fibo(i)){
//			printf("%d ",i);
//		}
//	}
//}
//*********************************************************************************************************************************
//B6:In ra n số Fibonacci đầu tiên.
//int f(int n){
//	int a=0,b=1;
//	while(b<n){
//		int tmp = a+b;a=b;b=tmp;
//	}return(b==n);
//}
//main(){
//	int n,i;scanf("%d",&n);
//	int count=0,sohientai=2;
//	while(count<=n){
//		if(f(sohientai)){
//			printf("%d ",sohientai);
//			count++;
//		}sohientai++;
//	}
//}
//*********************************************************************************************************************************
//B7:In ra 3 số Fibonacci lớn hơn n.
//int f(int n){
//	int a=0,b=1;
//	while(b<n){
//		int tmp=a+b;a=b;b=tmp;
//	}return(b==n);
//}
//main(){
//	int n,i;scanf("%d",&n);
//	int count=0;
//	for(i=n+1;count<3;i++){
//		if(f(i)){
//			printf("%d ",i);
//			count++;
//		}
//	}
//}
//*********************************************************************************************************************************
//B8:In ra 2 số Fibonacci, một số lớn hơn và một số nhỏ hơn n (gần n nhất).
//int f(int n){
//	int a=0,b=1;
//	while(b<n){
//		int temp = a+b;a=b;b=temp;
//	}return(b==n);
//}
//main(){
//	int n;scanf("%d",&n);
//	int sohientai,i=-1,j=-1;
//	for(sohientai=n-1;sohientai>1;sohientai--){
//		if(f(sohientai)){
//			i = sohientai;break;
//		}
//	}
//	for(sohientai=n+1;;sohientai++){
//		if(f(sohientai)){
//			j = sohientai;break;
//		}
//	}
//	if(i != -1)	printf("Lon:%d\n",i);
//	if(j != -1)	printf("Nho:%d\n",j);
//}
//*********************************************************************************************************************************
//B9:In ra 4 số Fibonacci, 2 số lớn hơn và 2 số nhỏ hơn n.
//int f(int n){
//	int a=0,b=1;
//	while(b<n){
//		int tmp = a+b;a=b;b=tmp;
//	}return(b==n);
//}
//main(){
//	int i,n;scanf("%d",&n);
//	int sohientai,dem_i=0,dem_j=0;
//	printf("Fibonacy nho hon N:\n");
//	for(sohientai=n-1;sohientai>1 && dem_i < 2;sohientai--){
//		if(f(sohientai)){
//			printf("%d ",sohientai);
//			dem_i++;
//		}
//	}printf("\n");
//	printf("Fibonacy lon hon N:\n");
//	for(sohientai=n+1;dem_j < 2;sohientai++){
//		if(f(sohientai)){
//			printf("%d ",sohientai);
//			dem_j++;
//		}
//	}printf("\n");
//}

//*********************************************************************************************************************************
//B10:Nhập n, p, q, in ra p số Fibonacci nhỏ hơn n và q số Fibonacci lớn hơn n.
//int f(int n){
//	int a=0,b=1;
//	while(b<n){
//		int temp = a+b;a=b;b=temp;
//	}return(b==n);
//}
//main(){
//    int n, p, q, sohientai, dem_k = 0, dem_j = 0;
//    scanf("%d%d%d", &n, &p, &q);
//    printf("Fibonacy nho hon N:\n");
//    for (sohientai = n - 1; sohientai > 1 && dem_k < p; sohientai--) {
//        if (f(sohientai)) {
//            printf("%d ", sohientai);
//            dem_k++;
//        }
//    }printf("\n");
//    printf("Fibonacy lon hon N:\n");
//    for (sohientai = n + 1; dem_j < q; sohientai++) {
//        if (f(sohientai)) {
//            printf("%d ", sohientai);
//            dem_j++;
//        }
//    }printf("\n");
//}

//*********************************************************************************************************************************
//B11:In ra các số Fibonacci (có 3 hoặc có 4 chữ số) mà có 
//tổng các chữ số chia hết cho 5.
//int f(int n){
//	int a=0,b=1;
//	while(b<n){
//		int temp=a+b;a=b;b=temp;
//	}return(b==n);	
//}
//int tong(int chuso){
//	int sum = 0;
//	while(chuso > 0){
//		sum += chuso % 10;
//		chuso /= 10;
//	}return sum;
//}
//main(){
//	int n,i;printf("Nhap N: ");scanf("%d",&n);
//	printf("Cac so Fibonacy co tong cac chu so chia het cho 5:\n");
//	for(i=100;i<=n;i++){
//		if(f(i)){
//			int sum = tong(i);
//			if(sum % 5 == 0){
//				printf("%d ",i);
//			}
//		}
//	}printf("\n");
//}


//B12:nhập n, tìm các số vừa là Palindrome vừa là Fibonacy nhỏ hơn n 
int fibonacy(int n){
	int a=0,b=1,temp;
	while(b<n){
		temp = a+b;a=b;b=temp;
	}return(b==n);
}

int palindrome(int n){//palindrome:so doi xung VD:121,44,12321
	int reversed=0,remainder,original=n;//reversed:so dao nguoc 
	while (n != 0) {//remainder:so con lai // original:Giu gia tri goc cua n
        remainder = n % 10;
        reversed = reversed * 10 + remainder;
        n /= 10;
	}return (reversed == original);
}
//original lưu giá trị 121 để so sánh.
//reversed ban đầu là 0, sau đó sẽ dần được xây dựng thành 121 (số đảo ngược).
//remainder dùng để tách từng chữ số từ n.
main(){
	int n,i;scanf("%d",&n);
	printf("Cac so Palindrome va Fibonacci nho hon %d:\n", n);
	for(i=1;i<=n;i++){
		if (fibonacy(i) && palindrome(i)){
			printf("%d ",i);
		}
	}
}
